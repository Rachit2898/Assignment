[{"/Users/rachitmishra/Desktop/Assignment/my-app/src/index.js":"1","/Users/rachitmishra/Desktop/Assignment/my-app/src/App.js":"2","/Users/rachitmishra/Desktop/Assignment/my-app/src/components/userlist/index.js":"3"},{"size":413,"mtime":1639197009774,"results":"4","hashOfConfig":"5"},{"size":6467,"mtime":1639196096137,"results":"6","hashOfConfig":"5"},{"size":908,"mtime":1639196120255,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16c9tgz",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/Users/rachitmishra/Desktop/Assignment/my-app/src/index.js",[],"/Users/rachitmishra/Desktop/Assignment/my-app/src/App.js",["16"],"import React from \"react\";\nimport PropertyList from \"./components/userlist\";\nimport UniqueID from \"react-html-id\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Table,\n  ButtonGroup,\n  Modal,\n} from \"react-bootstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    UniqueID.enableUniqueIds(this);\n    this.state = {\n      id: this.nextUniqueId(),\n      Name: \"\",\n      Property: \"\",\n      Size: \"\",\n\n      Description: \"\",\n      modalShow: false,\n      showPropId: 0,\n      data: [\n        {\n          id: this.nextUniqueId(),\n          Name: \"shivraj\",\n          Property: \"Flat\",\n          Size: \"4bhk\",\n\n          Description: \"Good Flat\",\n        },\n        {\n          id: this.nextUniqueId(),\n          Name: \"shivraj\",\n          Property: \"Plot\",\n          Size: \"4x7\",\n\n          Description: \"Bad Plot\",\n        },\n      ],\n    };\n    this.initialstate = {\n      id: this.nextUniqueId(),\n      Name: \"\",\n      Property: \"\",\n      Size: \"\",\n\n      Description: \"\",\n    };\n    this.HandleEvents = this.HandleEvents.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.deleProperty = this.deleProperty.bind(this);\n    this.setModalShow = this.setModalShow.bind(this);\n    this.setModalHide = this.setModalHide.bind(this);\n  }\n  setModalShow(id) {\n    this.setState({\n      modalShow: true,\n      showPropId: id,\n    });\n  }\n  setModalHide() {\n    this.setState({\n      modalShow: false,\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const dataList = {\n      id: this.nextUniqueId(),\n      Name: this.state.Name,\n      Property: this.state.Property,\n      Size: this.state.Size,\n\n      Description: this.state.Description,\n    };\n    this.setState({\n      data: [...this.state.data, dataList],\n    });\n  }\n\n  HandleEvents(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n  deleProperty(index, e) {\n    const emp = Object.assign([], this.state.data);\n    emp.splice(index, 1);\n    this.setState({\n      data: emp,\n    });\n  }\n  render() {\n    console.log(this.state.showPropId);\n    const { showPropId } = this.state;\n\n    return (\n      <div className=\"App\" style={{ marginTop: \"40px\", marginBottom: \"40px\" }}>\n        {this.state.data.length ? (\n          <Modal\n            show={this.state.modalShow}\n            onHide={this.setModalHide}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                {this.state.data[showPropId].Name +\n                  \" \" +\n                  this.state.data[showPropId].Property}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th style={{margin:\"20px\"}} >Name</th>\n                    <th style={{margin:\"20px\"}}>Property</th>\n                    <th style={{margin:\"20px\"}}>Size</th>\n\n                    <th style={{margin:\"20px\"}}>Description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td style={{margin:\"20px\"}}>{this.state.data[showPropId].Name}</td>\n                    <td style={{margin:\"20px\"}}>{this.state.data[showPropId].Property}</td>\n                    <td style={{margin:\"20px\"}}>{this.state.data[showPropId].Size}</td>\n\n                    <td style={{margin:\"20px\"}}>{this.state.data[showPropId].Description}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Modal.Body>\n          </Modal>\n        ) : (\n          \"\"\n        )}\n        <Container style={{margin:\"200px auto 200px 700px\"}}>\n          <Row>\n            <Col lg={{ span: \"8\", offset: \"2\" }}>\n              <PropertyList\n                propertyData={this.state.data}\n                deleProperty={this.deleProperty}\n                viewProperty={this.setModalShow}\n              />\n            </Col>\n            <Col style={{width: \"400px\",height: \"600px\"}} lg={{ span: \"8\", offset: \"2\" }}>\n              <h3>Add Property</h3>\n              <br />\n              <Form style={{width: \"300px\",height: \"300px\",border: \"1px solid black\"}} onSubmit={this.handleSubmit}>\n                <Form.Group style={{width: \"100px\", marginTop:\"10px\"}}>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control style={{width: \"200px\", marginLeft:\"50px\"}}\n                    value={this.state.Name}\n                    type=\"text\"\n                    name=\"Name\"\n                    placeholder=\"Name\"\n                    onChange={this.HandleEvents}\n                  />\n                </Form.Group>\n                <Form.Group style={{width: \"100px\", marginTop:\"10px\"}} >\n                  <Form.Label>Property</Form.Label>\n                  <Form.Control style={{width: \"200px\", marginLeft:\"50px\"}}\n                    type=\"text\"\n                    placeholder=\"Property Type\"\n                    name=\"Property\"\n                    value={this.state.Property}\n                    onChange={this.HandleEvents}\n                  />\n                </Form.Group>\n                <Form.Group style={{width: \"100px\", marginTop:\"10px\"}} >\n                  <Form.Label>Size</Form.Label>\n                  <Form.Control style={{width: \"200px\", marginLeft:\"50px\"}}\n                    value={this.state.Size}\n                    type=\"text\"\n                    name=\"Size\"\n                    placeholder=\"size\"\n                    onChange={this.HandleEvents}\n                  />\n                </Form.Group>\n\n                <Form.Group style={{width: \"100px\", marginTop:\"10px\"}} >\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control style={{width: \"200px\", marginLeft:\"50px\"}}\n                    type=\"text\"\n                    placeholder=\"About Property\"\n                    name=\"Description\"\n                    value={this.state.Description}\n                    onChange={this.HandleEvents}\n                  />\n                </Form.Group>\n                <Button style={{width: \"100px\", marginTop:\"10px\"}} type=\"submit\">Add Property</Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default App;\n",["17","18"],"/Users/rachitmishra/Desktop/Assignment/my-app/src/components/userlist/index.js",[],{"ruleId":"19","severity":1,"message":"20","line":12,"column":3,"nodeType":"21","messageId":"22","endLine":12,"endColumn":14},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},"no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-global-assign","no-unsafe-negation"]